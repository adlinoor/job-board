"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const multer_1 = require("../utils/multer");
const reqValidator_middleware_1 = __importDefault(require("../middlewares/reqValidator.middleware"));
const queryValidator_middleware_1 = __importDefault(require("../middlewares/queryValidator.middleware"));
const auth_middleware_1 = require("../middlewares/auth.middleware");
const job_controller_1 = require("../controllers/job.controller");
const job_schema_1 = require("../schema/job.schema");
const router = (0, express_1.Router)();
router.get("/public", (0, queryValidator_middleware_1.default)(job_schema_1.jobFiltersSchema), job_controller_1.getJobsHandler);
router.get("/filters/meta", job_controller_1.getJobFiltersMetaHandler);
router.get("/saved", auth_middleware_1.VerifyToken, auth_middleware_1.UserGuard, job_controller_1.getSavedJobsController);
router.get("/nearby", (0, queryValidator_middleware_1.default)(job_schema_1.nearbyJobsQuerySchema), job_controller_1.getNearbyJobsController);
router.get("/saved/paginated", auth_middleware_1.VerifyToken, auth_middleware_1.UserGuard, (0, queryValidator_middleware_1.default)(job_schema_1.PaginationSchema), job_controller_1.getSavedJobsPaginatedController);
router.get("/company/:companyId/suggestions", job_controller_1.GetSuggestedJobsController);
router.post("/", auth_middleware_1.VerifyToken, auth_middleware_1.AdminGuard, (0, multer_1.Multer)().single("banner"), job_controller_1.createJobHandler);
router.get("/", auth_middleware_1.VerifyToken, auth_middleware_1.AdminGuard, job_controller_1.getJobsByAdminHandler);
router.get("/:id", auth_middleware_1.VerifyToken, auth_middleware_1.AdminGuard, job_controller_1.getJobDetailHandler);
router.patch("/:id", auth_middleware_1.VerifyToken, auth_middleware_1.AdminGuard, (0, multer_1.Multer)().single("banner"), job_controller_1.updateJobHandler);
router.delete("/:id", auth_middleware_1.VerifyToken, auth_middleware_1.AdminGuard, job_controller_1.deleteJobHandler);
router.patch("/:id/publish", auth_middleware_1.VerifyToken, auth_middleware_1.AdminGuard, (0, reqValidator_middleware_1.default)(job_schema_1.publishJobSchema), job_controller_1.updateJobStatusHandler);
router.get("/:id/is-saved", auth_middleware_1.VerifyToken, auth_middleware_1.UserGuard, job_controller_1.checkIsJobSavedHandler);
router.post("/:id/save", auth_middleware_1.VerifyToken, auth_middleware_1.UserGuard, job_controller_1.saveJobHandler);
router.delete("/:id/save", auth_middleware_1.VerifyToken, auth_middleware_1.UserGuard, job_controller_1.removeSavedJobHandler);
router.post("/:id/apply", auth_middleware_1.VerifyToken, auth_middleware_1.UserGuard, (0, multer_1.Multer)().single("resume"), job_controller_1.applyJobHandler);
router.get("/:id/details", job_controller_1.getJobDetailViewController);
exports.default = router;
